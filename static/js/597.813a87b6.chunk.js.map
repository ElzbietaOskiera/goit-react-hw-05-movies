{"version":3,"file":"static/js/597.813a87b6.chunk.js","mappings":"qSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAc,mCAAG,oGACLL,EAASM,IAAI,uBADR,cACtBC,EADsB,yBAErBA,EAASC,MAFY,2CAAH,qDAKdC,EAAc,mCAAG,WAAMC,GAAN,uFACLV,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNO,MAAAA,KAHwB,cACtBH,EADsB,yBAMrBA,EAASC,MANY,2CAAH,sDASdG,EAAe,mCAAG,WAAMC,GAAN,uFACNZ,EAASM,IAAT,iBAAuBM,IADjB,cACvBL,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfK,EAAY,mCAAG,WAAMD,GAAN,uFACHZ,EAASM,IAAT,iBAAuBM,EAAvB,aADG,cACpBL,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZM,EAAe,mCAAG,WAAMF,GAAN,uFACNZ,EAASM,IAAT,iBAAuBM,EAAvB,aADM,cACvBL,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,4EC/BfO,EAAS,WAClB,OAAO,SAAC,KAAD,CAAcC,MAAM,MAAMC,MAAM,4BAC1C,C,yJCFYC,E,OAAaC,GAAAA,GAAH,6U,SCwDvB,EAnDa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdJ,GAAa,GAFC,UAGSX,EAAAA,EAAAA,IAAaY,GAHtB,OAGRlB,EAHQ,OAIde,EAAQf,EAASc,MAJH,gDAMdQ,MAAM,EAAD,IANS,yBAQdL,GAAa,GARC,4EAAH,qDAYfI,GACD,GAAE,CAACH,KAGF,2BACGF,IAAa,SAACR,EAAA,EAAD,KACZQ,GAAaF,EAAKS,OAAS,IAC3B,0BACE,SAACZ,EAAD,UACGG,EAAKU,KAAI,gBAAGN,EAAH,EAAGA,GAAIO,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,2BACE,gBACEC,IACEH,EAAY,wCACyBA,GACjC,iEAENI,IAAKH,EACLjB,MAAM,MACNqB,QAAQ,UAEV,uBAAIJ,KACJ,uCAAeC,OAZRT,EADD,UAqBrB,C","sources":["Api/Api.js","components/Loader/Loader.jsx","pages/MovieDetailsPage/Cast/Cast.styled.js","pages/MovieDetailsPage/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e0b0002470051a4dbc4e00339852fea1',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const response = await instance.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const getMovieByName = async query => {\n  const response = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}/reviews`);\n  return response.data;\n};\n","import { InfinitySpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return <InfinitySpin width=\"200\" color=\"rgba(191, 122, 158, 0.8)\" />;\n};","import styled from 'styled-components';\n\nexport const ListStyled = styled.ul`\n  display: grid;\n  align-items: baseline;\n  justify-items: stretch;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'Api/Api';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { ListStyled } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getMovieCast(id);\n        setCast(response.cast);\n      } catch (error) {\n        alert(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [id]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {!isLoading && cast.length > 0 && (\n        <div>\n          <ListStyled>\n            {cast.map(({ id, profile_path, name, character }) => (\n              <li key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w92${profile_path}`\n                      : 'https://www.iconpacks.net/icons/1/free-user-icon-244-thumb.png'\n                  }\n                  alt={name}\n                  width=\"150\"\n                  loading=\"lazy\"\n                />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            ))}\n          </ListStyled>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendMovies","get","response","data","getMovieByName","query","getMovieDetails","movie_id","getMovieCast","getMovieReviews","Loader","width","color","ListStyled","styled","useState","cast","setCast","isLoading","setIsLoading","id","useParams","useEffect","fetchCast","alert","length","map","profile_path","name","character","src","alt","loading"],"sourceRoot":""}