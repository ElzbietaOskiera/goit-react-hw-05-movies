{"version":3,"file":"static/js/14.24f9f511.chunk.js","mappings":"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","sources":["Api/Api.js","components/Loader/Loader.jsx","components/MoviesList/MoviesItems.styled.js","components/MoviesList/MoviesItems.jsx","components/MoviesList/MoviesListTrend.styled.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e0b0002470051a4dbc4e00339852fea1',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const response = await instance.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const getMovieByName = async query => {\n  const response = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}/reviews`);\n  return response.data;\n};\n","import { InfinitySpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return <InfinitySpin width=\"200\" color=\"rgba(191, 122, 158, 0.8)\" />;\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ItemStyled = styled.li`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  color: rgba(191, 122, 158, 0.8);\n`;\n\nexport const TitleStyled = styled.h3`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin-top: 5px;\n  font-size: 20px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 500px;\n  object-fit: cover;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\n\n\nimport {\n  ItemStyled,\n  LinkStyled,\n  TitleStyled,\n  Image,\n} from './MoviesItems.styled';\n\nexport const MoviesItems = ({ id, title, poster_path, state }) => {\n\n\n  return (\n    <ItemStyled key={id}>\n      <LinkStyled to={`/movies/${id}`} state={state}>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : 'https://static.wikia.nocookie.net/just-because/images/0/0c/NoImage_Available.png/revision/latest?cb=20170601005615'\n          }\n          alt={title}\n          loading=\"lazy\"\n        />\n        <TitleStyled>{title}</TitleStyled>\n      </LinkStyled>\n    </ItemStyled>\n  );\n};\n\nMoviesItems.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n  state: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListStyled = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { MoviesItems } from './MoviesItems';\n\nimport { ListStyled } from './MoviesListTrend.styled';\n\nexport const MoviesList = ({ movies, state }) => {\n  return (\n    <div>\n      <ListStyled>\n        {movies.map(({ id, title, poster_path }) => (\n          <MoviesItems\n            key={id}\n            id={id}\n            title={title}\n            poster_path={poster_path}\n            state={state}\n            loading=\"lazy\"\n          />\n        ))}\n      </ListStyled>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n  state: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 15px;\n  gap: 5px;\n`;\n\nexport const InputStyled = styled.input`\n  border-radius: 5px;\n  font-size: 20px;\n  color: rgba(191, 122, 158, 0.8);\n  background-color: #fff;\n  border: 1px solid #bdbdbd;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &::placeholder {\n    font-size: 20px;\n  }\n  &:focus,\n  &:hover {\n    color: rgba(191, 122, 158, 0.8);\n    background-color: #fff;\n    border-color: rgba(191, 122, 158, 0.8);\n  }\n`;\n\nexport const ButtonStyled = styled.button`\n  width: 100px;\n  font-size: 20px;\n  cursor: pointer;\n  border-radius: 5px;\n  border: 1px solid #bdbdbd;\n  background-color: #fff;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: #fff;\n    background-color: rgba(191, 122, 158, 0.8);\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FormStyled, InputStyled, ButtonStyled } from './SearchForm.styled';\n\nexport const SearchForm = ({ onChangeSearch, value }) => {\n  const [query, setQuery] = useState(value || '');\n\n  const handelInputChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase().trim());\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    onChangeSearch(query);\n  };\n\n  return (\n    <FormStyled onSubmit={handleFormSubmit}>\n      <InputStyled\n        type=\"text\"\n        onChange={handelInputChange}\n        value={query}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n        required\n      />\n      <ButtonStyled type=\"submit\">Search</ButtonStyled>\n    </FormStyled>\n  );\n};\n\nSearchForm.propTypes = {\n  value: PropTypes.string,\n  onChangeSearch: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContainerStyled = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 15px 15px;\n  color: #5f0000;\n  text-align: center;\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { getMovieByName } from 'Api/Api';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\n\n\nimport { ContainerStyled } from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getMovieByName(query);\n        setMovies(response.results);\n        if (response.total_results === 0) {\n          alert(`We don't find any movies`);\n        }\n      } catch (error) {\n        alert(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [query]);\n\n  const onChangeSearch = query => {\n    setSearchParams({ query });\n  };\n\n  const location = useLocation();\n\n  return (\n    <ContainerStyled>\n      <SearchForm onChangeSearch={onChangeSearch} value={query} />\n      {movies.length > 0 && (\n        <MoviesList movies={movies} state={{ from: location }} />\n      )}\n      {isLoading && <Loader />}\n    </ContainerStyled>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendMovies","get","response","data","getMovieByName","query","getMovieDetails","movie_id","getMovieCast","getMovieReviews","Loader","width","color","ItemStyled","styled","LinkStyled","Link","TitleStyled","Image","MoviesItems","id","title","poster_path","state","to","src","alt","loading","ListStyled","MoviesList","movies","map","FormStyled","InputStyled","ButtonStyled","SearchForm","onChangeSearch","value","useState","setQuery","onSubmit","event","preventDefault","type","onChange","currentTarget","toLowerCase","trim","autoComplete","autoFocus","placeholder","required","ContainerStyled","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","fetchMovies","results","total_results","alert","location","useLocation","length","from"],"sourceRoot":""}