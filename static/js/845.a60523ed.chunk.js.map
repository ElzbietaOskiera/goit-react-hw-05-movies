{"version":3,"file":"static/js/845.a60523ed.chunk.js","mappings":"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","sources":["Api/Api.js","components/Loader/Loader.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e0b0002470051a4dbc4e00339852fea1',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const response = await instance.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const getMovieByName = async query => {\n  const response = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}/reviews`);\n  return response.data;\n};\n","import { InfinitySpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return <InfinitySpin width=\"200\" color=\"rgba(191, 122, 158, 0.8)\" />;\n};","import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const ContainerStyled = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 15px 15px;\n  color: #fff;\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  width: 150px;\n  border: none;\n  border-radius: 10px;\n  font-size: 25px;\n  font-weight: bold;\n  color: rgba(0, 0, 0, 0.85);\n  background-color: #fff;\n  margin-bottom: 10px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: #fff;\n    background-color: rgba(191, 122, 158, 0.8);\n  }\n`;\n\nexport const CardStyled = styled.div`\n  margin-bottom: 15px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 15px;\n  }\n`;\n\nexport const BoxStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  font-size: 25px;\n  text-align: justify;\n`;\n\nexport const TextStyled = styled.span`\n  display: block;\n  font-weight: bold;\n`;\n\nexport const ListStyled = styled.ul`\n  display: grid;\n  margin-bottom: 15px;\n  gap: 10px;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  padding: 10px 0;\n  color: #fff;\n  &.active,\n  &:hover,\n  &:focus {\n    color: rgba(191, 122, 158, 0.8);\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\n\nimport { getMovieDetails } from 'Api/Api';\nimport { Loader } from 'components/Loader/Loader';\n\nimport {\n  ContainerStyled,\n  LinkStyled,\n  CardStyled,\n  BoxStyled,\n  TextStyled,\n  ListStyled,\n  NavLinkStyled,\n} from './MovieDetailsPage.styled';\n\nconst getGenresMovie = array => {\n  return array.map(genre => genre.name).join(', ');\n};\n\nconst getYearDate = fullDate => {\n  const date = new Date();\n  return date.getFullYear(fullDate);\n};\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getMovieDetails(id);\n        setMovie(response);\n      } catch (error) {\n        alert(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [id]);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <ContainerStyled>\n      <LinkStyled to={backLinkHref}>Go Back</LinkStyled>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <CardStyled>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : 'https://static.wikia.nocookie.net/just-because/images/0/0c/NoImage_Available.png/revision/latest?cb=20170601005615'\n            }\n            alt={movie.title}\n            width=\"300\"\n            loading=\"lazy\"\n          />\n          <BoxStyled>\n            <h3>\n              {movie.title} ({getYearDate(movie.release_date)})\n            </h3>\n            <p>User score: {Math.round(movie.vote_average * 10)}%</p>\n            <p>\n              <TextStyled>Overview</TextStyled> {movie.overview}\n            </p>\n            <p>\n              <TextStyled>Genres</TextStyled> {getGenresMovie(movie.genres)}\n            </p>\n          </BoxStyled>\n        </CardStyled>\n      )}\n      <BoxStyled>\n        <TextStyled>Additional information</TextStyled>\n        <ListStyled>\n          <li>\n            &#8594;\n            <NavLinkStyled\n              to={`/movies/${id}/cast`}\n              state={{ from: backLinkHref }}\n            >\n              View cast information here\n            </NavLinkStyled>\n          </li>\n          <li>\n            &#8594;\n            <NavLinkStyled\n              to={`/movies/${id}/reviews`}\n              state={{ from: backLinkHref }}\n            >\n              See reviews here\n            </NavLinkStyled>\n          </li>\n        </ListStyled>\n      </BoxStyled>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </ContainerStyled>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendMovies","get","response","data","getMovieByName","query","getMovieDetails","movie_id","getMovieCast","getMovieReviews","Loader","width","color","ContainerStyled","styled","LinkStyled","Link","CardStyled","BoxStyled","TextStyled","ListStyled","NavLinkStyled","NavLink","useState","movie","setMovie","isLoading","setIsLoading","id","useParams","useEffect","fetchMovie","alert","array","fullDate","backLinkHref","useLocation","state","from","to","src","poster_path","alt","title","loading","release_date","Date","getFullYear","Math","round","vote_average","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}