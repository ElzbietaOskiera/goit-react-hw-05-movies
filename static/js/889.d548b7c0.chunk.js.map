{"version":3,"file":"static/js/889.d548b7c0.chunk.js","mappings":"qSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAc,mCAAG,oGACLL,EAASM,IAAI,uBADR,cACtBC,EADsB,yBAErBA,EAASC,MAFY,2CAAH,qDAKdC,EAAc,mCAAG,WAAMC,GAAN,uFACLV,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNO,MAAAA,KAHwB,cACtBH,EADsB,yBAMrBA,EAASC,MANY,2CAAH,sDASdG,EAAe,mCAAG,WAAMC,GAAN,uFACNZ,EAASM,IAAT,iBAAuBM,IADjB,cACvBL,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfK,EAAY,mCAAG,WAAMD,GAAN,uFACHZ,EAASM,IAAT,iBAAuBM,EAAvB,aADG,cACpBL,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZM,EAAe,mCAAG,WAAMF,GAAN,uFACNZ,EAASM,IAAT,iBAAuBM,EAAvB,aADM,cACvBL,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,4EC/BfO,EAAS,WAClB,OAAO,SAAC,KAAD,CAAcC,MAAM,MAAMC,MAAM,4BAC1C,C,2JCFYC,EAAaC,EAAAA,GAAAA,GAAH,kJASVC,EAAaD,EAAAA,GAAAA,EAAH,kE,kBCqCvB,EAzCgB,WACd,OAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAa,GAFG,UAGOX,EAAAA,EAAAA,IAAgBY,GAHvB,OAGVnB,EAHU,OAIhBgB,EAAUhB,EAASuB,SAJH,gDAMhBC,MAAM,EAAD,IANW,yBAQhBN,GAAa,GARG,4EAAH,qDAYjBI,GACD,GAAE,CAACH,KAGF,2BACGF,IAAa,SAACT,EAAA,EAAD,KACZS,GAAaF,EAAOU,OAAS,IAC7B,0BACE,wBACGV,EAAOW,KAAI,gBAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACjB,EAAD,YACE,UAACE,EAAD,qBAAoBc,MACpB,uBAAIC,MAFWT,EADP,UAWvB,C","sources":["Api/Api.js","components/Loader/Loader.jsx","pages/MovieDetailsPage/Reviews/Reviews.styled.js","pages/MovieDetailsPage/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e0b0002470051a4dbc4e00339852fea1',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const response = await instance.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const getMovieByName = async query => {\n  const response = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}/reviews`);\n  return response.data;\n};\n","import { InfinitySpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return <InfinitySpin width=\"200\" color=\"rgba(191, 122, 158, 0.8)\" />;\n};","import styled from 'styled-components';\n\nexport const ItemStyled = styled.li`\n  font-size: 22px;\n  list-style: inside;\n  text-align: justify;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const TextStyled = styled.p`\n  display: inline;\n  font-weight: bold;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'Api/Api';\n\nimport { ItemStyled, TextStyled } from './Reviews.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [review, setReview] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReview = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getMovieReviews(id);\n        setReview(response.results);\n      } catch (error) {\n        alert(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReview();\n  }, [id]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {!isLoading && review.length > 0 && (\n        <div>\n          <ul>\n            {review.map(({ id, author, content }) => (\n              <ItemStyled key={id}>\n                <TextStyled>Author {author}</TextStyled>\n                <p>{content}</p>\n              </ItemStyled>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendMovies","get","response","data","getMovieByName","query","getMovieDetails","movie_id","getMovieCast","getMovieReviews","Loader","width","color","ItemStyled","styled","TextStyled","useState","review","setReview","isLoading","setIsLoading","id","useParams","useEffect","fetchReview","results","alert","length","map","author","content"],"sourceRoot":""}